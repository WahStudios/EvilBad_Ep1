using UnityEngine;
using System.Collections;

public class MonsterStats : MonoBehaviour {
	//need to create enum for different damage types so you can select damage type when applying stat damage in function
	public int level;
	public int HP;
	public int touchDamage;
	public int resistance;
	public int defense;
	public int experience;
	public int gold;
	public bool[] castle; //0 is 1, 1 is 2, and 2 is 3. so basically start at zero
	public int stunPunchDamage;
	public int stunPunchStunChance;
	public int stunPunchStunSeconds;
	public int poisonSnotDamage;
	public int poisonSnotPoisonDamage;
	public int poisonSnotPoisonSeconds;
	public int hookStrikeDamage;
	public int swordSwipeDamage;
	public int shadowSpinDamage;
	public int flurryStrikeDamage;
	public int kickDamage;
	public int miniScytheDamage;
	public int scytheSlashDamage;
	public int throwScytheDamage;
	public int spearDamage;
	public int spearThrowDamage;
	public int shieldBashDamage;
	public int shieldRamDamage;
	public int flurrySlashDamage;
	public int stoneTouchDamage;
	public int venomDamage;
	public int fireBreathDamage;
	public int fireBreathMeltSeconds;
	public int fireBreathMeltDefenseLowered;
	public int fireBreathBurnSeconds;
	public int fireBreathBurnDamage;
	public int poisonGasDamage;
	public int poisonGasPoisonDamage;
	public int poisonGasPoisonSeconds;
	public int electricalSpearDamage;
	public int electricalSpearStunChance;
	public int electricalSpearStunSeconds;
	public int explodingEggsDamage;
	public int explodingEggsKnockBackChance;
	public int explodingEggsKnockBackAmount;
	public int songDamage;
	public int songSeconds;
	public int songMindControlSeconds;
	public int songMindControlChance;
	public int sharpFeatherDamage;
	public int fireBallDamage;
	public int fireBallMeltSeconds;
	public int fireBallMeltDefenseLowered;
	public int fireBallBurnDamage;
	public int fireBallBurnSeconds;
	public int fireBallKnockBackAmount;
	public int fireBallKnockBackChance;
	public int chaosBladeDamage;
	public int chargeDamage;
	public int smallBurpDamage;
	public int largeBelchDamage;
	public int largeBelchPoisonDamage;
	public int largeBelchPoisonSeconds;
	public int bottleDamage;
	public int bottleDamageConfusedSeconds;
	public int bottleDamageConfusedChance;
	public int dumbBellDamage;
	public int dashDistance;
	public int lightBeamDamage;
	public int lightBeamBlindSeconds;
	public int lightBeamBlindChance;
	public int elementalDamage;
	public int hourglassStopSeconds;
	public int clockStopSeconds;
	public int razorsDamage;
	public int lightningSpearDamage;
	public int lightningSPearStunSeconds;
	public int lightningSpearStunChance;
	public int mugDamage;
	public int mugConfusedChance;
	public int mugConfuseSeconds;
	public int leapAttackDamage;
	public int frostBarkDamage;
	public int poisonTouchDamage;
	public int poisonTouchPoisonDamage;
	public int poisonTouchPoisonSeconds;
	public int toxicCloudDamage;
	public int toxicCloudSeconds;
	public int toxicCloudPoisonDamage;
	public int toxicCloudPoisonSeconds;
	public int fireChargeDamage;
	public int fireChargeCrushedArmChance;
	public int fireChargeBurnDamage;
	public int downSlamDamage;
	public int daggerThrowDamage;
	public int daggerThrowPoisonDamage;
	public int daggerThrowPoisonSeconds;
	public int clawDamage;
	public int boulderDamage;
	public int regenerationAmount;
	public int regenerationSeconds;
	public int torchesDamage;
	public int torchesMeltSeconds;
	public int torchesMeltDefenseLowered;
	public int pinsDamage;
	public int pinsStunChance;
	public int pinsStunSeconds;
	public int bouncingBallDamage;
	public int knifeDamage;
	public int hammerStrikeDamage;
	public int hammerStrikeStunSeconds;
	public int hammerStrikeStunChance;
	public int lightningStreamDamage;
	public int lightningStreamStunSeconds;
	public int lightningStreamStunChance;
	public int thunderBoltDamage;
	public int thunderBoltStunSeconds;
	public int thunderBoltStunChance;
	public int lightningRodsDamage;
	public int lightningRodsStunSeconds;
	public int lightningRodsStunChance;
	public int dartDamage;
	public int dartKockBackChance;
	public int dartKnockBackAmount;
	public int handSlamDamage;
	public int snowBallsDamage;
	public int snowBallFrozenChance;
	public int snowBallFrozenSeconds;
	public int iceOrbsDamage;
	public int iceOrbsFrozenChance;
	public int iceOrbsFrozenSeconds;
	public int flamesDamage;
	public int flamesMeltSeconds;
	public int flamesMeltDefenseLowered;
	public int waterOrbsDamage;
	public int windTouchDamage;
	public int windTouchStunChance;
	public int windTouchStunSeconds;
	public int mindPushDamage;
	public int mindPushKnockBackChance;
	public int mindPushKnockBackAmount;
	public int mindControlSeconds;
	public int mindControlLifeStealAmount;
	public int inkDamage;
	public int inkBlindChance;
	public int inkBlindSeconds;
	public int blackFlameDamage;
	public int blackFlameLowerResistanceAmount;
	public int blackFlameLowerResistanceSeconds;
	public int jumpSlamDamage;
	public int axeSlamDamage;
	public int axeSlamHeadacheChance;
	public int axeSlamTripleDamageChance;
	public int bananaDamage;
	public int bananaStunChance;
	public int bananaStunSeconds;
	public int waterBubbleTrapDamage;
	public int waterBlastDamage;
	public int waterPoolDamage;
	public int worldPoolDamage;
	public int electricityDamage;
	public int electricityStunChance;
	public int tsunamiDamage;
	public int hurricaneDamage;
	public int bubblesDamage;
	public bool normalMode;
	public bool superMode;
	public bool superDuperMode;// make enum later
	public int flurryPunchDamage;
	public int slamDamage;
	public int beamDamage;
	public int beamBlindChance;
	public int lazersDamage;
	public int fireTouchDamage;
	public int fireTouchBurnSeconds;
	public int fireTouchBurnAmount;
	public int fireAuraDamage;
	public int fireAuraSeconds;
	public int tornadoDamage;
	public int tornadoSeconds;
	public int acidRainDamage;
	public int acidRainSeconds;
	public int acidRainMeltSeconds;
	public int acidRainMeltDefenseLowered;
	public int lightningStrikeDamage;
	public int lightningStrikeStunSeconds;
	public int lightningStrikeStunChance;
	public int lavaRocksDamage;
	public int lavaStreamDamage;
	public int lavaStreamMeltSeconds;
	public int lavaStreamMeltDefenseLowered;
	public int lavaStreamBurnDamage;
	public int lavaStreamBurnSeconds;
	public int meteorsDamage;
	public int fetusDamage;
	public int fetusBlasphemySeconds;
	public int shadowTouchDamage;
	public int wandDamage;
	public string wandRandomElementType;//enum
	public int healingAmount;
	public int acidBubblesDamage;
	public int acidBubblesMeltSeconds;
	public int acidBubblesMeltDefenseLowered;
	public int tongueLashDamage;
	public int poisonDartDamage;
	public int poisonDartPoisonSeconds;
	public int poisonDartPoisonDamage;
	public int swordDamage;
	public int swordPoisonDamage;
	public int swordPoisonSeconds;
	public int pounceDamage;
	public int roarsDamage;
	public int flameTearsDamage;
	public int sunFlareDamage;
	public int eyeBeamsDamage;
	public int heatStrokesDamage;
	public int glowAmount;
	public int iceProjectileDamage;
	public int iceProjectileFrozenSeconds;
	public int iceProjectileFrozenChance;
	public int fireProjectileDamage;
	public int fireProjectileMeltSeconds;
	public int fireProjectileMeltDefenseLowered;
	public int handCrushDamage;
	public int snakeCoverHPAmount;
	public int fireOrbsDamage;
	public int fireOrbsMeltDefenseLowered;
	public int fireOrbsMeltSeconds;
	public int reboundArrowDamage;
	public int homignArrowDamage;
	public int homingArrowStunChance;
	public int homingArrowStunSeconds;
	public int frostArrowDamage;
	public int frostArrowFrozenChance;
	public int frostArrowFrozenSeconds;
	public int flameArrowDamage;
	public int flameArrowMeltSeconds;
	public int flameArrowMeltDefenseLowered;
	public int bladeShieldDamage;
	public int lifeFromArrowsAmount;
	public int lifeFromArrowsSeconds;
	public int bloodSphereDamage;
	public int bloodSphereLifeDrainAmount;
	public int drainAuraDamage;
	public int drainAuraSeconds;
	public int drainAuraLifeDrainAmount;
	public int slapDamage;
	public int slapPoisonDamage;
	public int slapPoisonSeconds;
	public int blindBeamDamage;
	public int blindBeamBlindChance;
	public int blindBeamBlindAmount;
	public int earthBeamDamage;
	public int earthBeamFrozenChance;
	public int earthBeamFrozenSeconds;
	public int acidBeamDamage;
	public int acidBeamPoisonDamage;
	public int acidBeamPoisonSeconds;
	public int tornadoBeamDamage;
	public int tornadoBeamKnockBackAmount;
	public int lightningBeamDamage;
	public int lightningBeamStunChance;
	public int lightningBeamStunSeconds;
	public int fireBeamDamage;
	public int fireBeamMeltSeconds;
	public int fireBeamMeltDefenseLowered;
	public int shadowBeamDamage;
	public int shadowBeamWeakenChance;
	public int shadowBeamWeakenSeconds;
	public int lightningShieldDamage;
	public int lightningShieldSeconds;
	public int lightningShieldStunChance;
	public int lightningShieldStunSeconds;
	public int weakeningDamage;
	public int weakeningWeakenChance;
	public int weakeningWeakenSeconds;
	public int curseSpellDamage;
	public int curseSpellCurseChance;
	public int curseSPellCurseSeconds;
	public int fearSpellDamage;
	public int fearSpellFearChance;
	public int fearSpellFearSeconds;
	public int explodingZombieDamage;
	public int explodingZombieBurnDamage;
	public int explodingZombieBurnSeconds;
	public int poisonZombieDamage;
	public int poisonZombiePoisonDamage;
	public int poisonZombiePoisonSeconds;
	public int lotusFlowerDamage;
	public int conchShellDamage;
	public int spikedBallDamage;
	public int ninjaStarsDamage;
	public int tentacleTouchDamage;
	public int tentacleSlamDamage;
	public int magicMissileDamage;
	public int laserBeamDamage;
	public int strikeDamage;
	public int clawStrikeDamage;
	public int tackleDamage;
	public int blackCatSwarmDamage;
	public int yawnBallsDamage;
	public int leapDamage;
	public int debrisDamage;
	public int beingInhaledDamage;
	public int spitOutDamage;
	public int shadowDamage;
	public int shadowLifeStealAmount;
	public int fireDamage;
	public int fireSeconds;
	public int lightDamage;
	public int lightSeconds;
	public int windDamage;
	public int windSeconds;
	public int waterDamage;
	public int earthDamage;
	public int earthSeconds;
	public int kickHeadacheSeconds;
	public int gustDamage;
	public int gustKnockBackAmount;
	public int diveBombDamage;
	public int windClawDamage;
	public int windSlashDamage;
	public int lotusDamage;
	public int fireShotDamage;
	public int fireShotBurnDamage;
	public int fireShotBurnSeconds;
	public int chargedFireShotDamage;
	public int chargedFireShotBurnDamage;
	public int chargedFireShotBurnSeconds;
	public int chargedFireShotKnockBackAmount;
	public int chargedFireShotCritChance;
	public int threeWayShotDamage;
	public int threeWayShotSlowChance;
	public int threeWayShotSlowSeconds;
	public int arcShotDamage;
	public int arcShotFrozenChance;
	public int arcShotFrozenSeconds;
	public int javelinDamage;
	public int javelinStunChance;
	public int javelinStunSeconds;
	public int swordSwipDamage;
	public int spinningLotusDamage;
	public int confusedNoteConfusionSeconds;
	public int confusedNoteConfusionChance;
	public int windBlastDamage;
	public int swordSliceDamage;
	public int swordTouchDamage;
	public int tornadoSpinDamage;
	public int maceDamage;
	public int fallingBlocksDamage;
	public int roarDamage;
	public int roarFearChance;
	public int roarFearSeconds;
	public int roarKnockbackChance;
	public int roarKnockbackAmount;
	public int roarWeakenChance;
	public int roarWeakenSeconds;
	public int tremblingSeconds;
	public int lotusBladeDamage;
	public int appendageDamage;
	public int meatBallDamage;
	public int largeNoodleDamage;
	public int largeNoodleStunChance;
	public int largeNoodleStunSeconds;
	public int lightningTrailDamage;
	public int thunderKickDamage;
	public int thunderStormDamage;
	public int diskFlamesDamage;
	public int explodingFireBallsDamage;
	public int ankhsDamage;
	public int heatWaveDamage;
	public int homingSpiritsDamage;
	public int energyWheelsDamage;
	public int energyWheelsWeaknessChance;
	public int energyWheelsWeaknessSeconds;
	public int iceAxeDamage;
	public int iceBreathDamage;
	public int iceStormDamage;
	public int aThousandReincarnationsDamage;






















	// Use this for initialization
	void Start () {
	
	}
	
	// Update is called once per frame
	void Update () {
	
	}
}
